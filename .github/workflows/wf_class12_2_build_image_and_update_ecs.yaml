name: wf_class12_2_build_image_and_update_ecs

on:
  workflow_dispatch:

env:
  ecr_repo: "307946636515.dkr.ecr.us-east-1.amazonaws.com/dev-studentportal"
  ecs_task_def: "dev-studentportal-task-def"
  ecs_cluster: "dev-studentportal-cluster"
  ecs_service: "dev-studentportal-service"
  app_container: "studentportal"
  aws_account: "307946636515"
  aws_region: "us-east-1"
  docker_file_path: "class6-ecs-rds/Dockerfile"
  image_tag: ${{ github.sha }}
  

jobs:
  build:
    runs-on: ubuntu-latest      

    steps:
      - name: checkout the code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}

      - name: ecr login
        run: aws ecr get-login-password --region ${{ env.aws_region }} | docker login --username AWS --password-stdin ${{ env.aws_account }}.dkr.ecr.${{ env.aws_region }}.amazonaws.com

      - name: docker build 
        run: |
          cd ${{ docker_file_path }}
          docker build -t ecsapp .
          docker tag ecsapp ${{ env.ecr_repo }}:${{ env.image_tag }}

      - name: docker push
        run: docker push ${{ env.ecr_repo }}:${{ env.image_tag }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
          
      - name: Download task definition for studentportal
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ecs_task_def }} \
          --query taskDefinition > task-definition.json
          ls -l task-definition.json

      
      - name: Fill in the new image ID for studentportal in the ECS task def
        id: task-def-studentportal
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.app_container }}
          image: ${{ env.ecr_repo }}:${{ env.image_tag }}

      - name: Deploy app on Amazon ECS task definition
#        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def-studentportal.outputs.task-definition }}
          service: ${{ env.ecs_service }}
          cluster: ${{ env.ecs_cluster }}
          wait-for-service-stability: true